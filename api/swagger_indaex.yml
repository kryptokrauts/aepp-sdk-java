swagger: '2.0'
info:
  description: API for [Aeternity Middleware](https://github.com/aeternity/ae_mdw)
  version: '1.0'
  title: Aeternity Middleware
paths:
  /block/{hash}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get block information by given key/micro block hash.
      operationId: get_block_by_hash
      produces:
        - application/json
      parameters:
        - name: hash
          in: path
          description: The key/micro block hash.
          required: true
          type: string
          x-example: kh_uoTGwc4HPzEW9qmiQR1zmVVdHmzU6YmnVvdFe6HvybJJRj7V6
      responses:
        '200':
          description: Returns block information by given key/micro block hash.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /blocki/{kbi}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get key block information by given key block index(height).
      operationId: get_block_by_kbi
      produces:
        - application/json
      parameters:
        - name: kbi
          in: path
          description: The key block index(height).
          required: true
          type: integer
          x-example: 305000
      responses:
        '200':
          description: Returns key block information by given key block index(height).
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /blocki/{kbi}/{mbi}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get micro block information by given key block index(height) and micro block index.
      operationId: get_block_by_kbi_and_mbi
      produces:
        - application/json
      parameters:
        - name: kbi
          in: path
          description: The key block index(height).
          required: true
          type: integer
          x-example: 300001
        - name: mbi
          in: path
          description: The micro block index.
          required: true
          type: integer
          x-example: 4
      responses:
        '200':
          description: Returns micro block information by given key block index(height) and micro block index.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /blocks/{range_or_dir}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get multiple generations.
      operationId: get_blocks
      produces:
        - application/json
      parameters:
        - name: range_or_dir
          in: path
          description: The direction, which could be **forward** or **backward**, or non-negative integer range.
          required: true
          type: string
          x-example: 300000-300100
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          type: integer
          default: 10
          maximum: 1000
          minimum: 1
          format: int32
          x-example: 1
      responses:
        '200':
          description: Returns multiple generations.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /name/{id}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get information for given name or encoded hash.
      operationId: get_name_by_id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The name or encoded hash.
          required: true
          type: string
          x-example: wwwbeaconoidcom.chain
      responses:
        '200':
          description: Returns information for given name.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /name/auction/{id}:
    get:
      tags:
        - Middleware
      summary: ''
      operationId: get_name_auction_by_id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The name or encoded hash.
          required: true
          type: string
          x-example: wwwbeaconoidcom.chain
      responses:
        '200':
          description: Returns information for given name.
          schema:
            $ref: '#/definitions/NameAuction'
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /names:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get all active and inactive names, except those in auction.
      operationId: get_all_names
      produces:
        - application/json
      parameters:
        - name: by
          in: query
          description: The ordering via parameters.
          required: false
          type: string
          default: expiration
          enum:
            - expiration
            - name
        - name: direction
          in: query
          description: The direction - **forward** is from genesis to the end, **backward** is from end to the beginning.
          required: false
          type: string
          default: backward
          enum:
            - forward
            - backward
        - name: page
          in: query
          description: The number of page to show.
          required: false
          type: integer
          default: 1
          format: int32
          x-example: 1
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          type: integer
          default: 10
          maximum: 1000
          minimum: 1
          format: int32
          x-example: 10
      responses:
        '200':
          description: Returns information for active and inactive names.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /names/active:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get active names.
      operationId: get_active_names
      produces:
        - application/json
      parameters:
        - name: by
          in: query
          description: The ordering via parameters.
          required: false
          type: string
          default: expiration
          enum:
            - expiration
            - name
        - name: direction
          in: query
          description: The direction - **forward** is from genesis to the end, **backward** is from end to the beginning.
          required: false
          type: string
          default: backward
          enum:
            - forward
            - backward
        - name: page
          in: query
          description: The number of page to show.
          required: false
          type: integer
          default: 1
          format: int32
          x-example: 1
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          type: integer
          default: 10
          maximum: 1000
          minimum: 1
          format: int32
          x-example: 10
      responses:
        '200':
          description: Returns information for active names.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /names/auctions:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get all auctions.
      operationId: get_all_auctions
      produces:
        - application/json
      parameters:
        - name: by
          in: query
          description: The ordering via parameters.
          required: false
          type: string
          default: expiration
          enum:
            - expiration
            - name
        - name: direction
          in: query
          description: The direction - **forward** is from genesis to the end, **backward** is from end to the beginning.
          required: false
          type: string
          default: backward
          enum:
            - forward
            - backward
        - name: page
          in: query
          description: The number of page to show.
          required: false
          type: integer
          default: 1
          format: int32
          x-example: 1
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          type: integer
          default: 10
          maximum: 1000
          minimum: 1
          format: int32
          x-example: 10
      responses:
        '200':
          description: Returns information for all auctions.
          schema:
            $ref: '#/definitions/NameAuctions'
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /names/pointees/{id}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get names pointing to a particular pubkey.
      operationId: get_pointees_by_id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The public key.
          required: true
          type: string
          x-example: ak_2HNsyfhFYgByVq8rzn7q4hRbijsa8LP1VN192zZwGm1JRYnB5C
      responses:
        '200':
          description: Returns names pointing to a particular pubkey, partitioned into active and inactive sets.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /names/pointers/{id}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get pointers for given name.
      operationId: get_pointers_by_id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The name.
          required: true
          type: string
          x-example: wwwbeaconoidcom.chain
      responses:
        '200':
          description: Returns just pointers for given name.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /status:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get middleware status.
      operationId: get_status
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Returns the status of the MDW.
          schema:
            $ref: '#/definitions/Status'
      deprecated: false
  /tx/{hash}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get a transaction by a given hash.
      operationId: get_tx_by_hash
      produces:
        - application/json
      parameters:
        - name: hash
          in: path
          description: The transaction hash.
          required: true
          type: string
          x-example: th_zATv7B4RHS45GamShnWgjkvcrQfZUWQkZ8gk1RD4m2uWLJKnq
      responses:
        '200':
          description: Returns the transaction.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /txi/{index}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get a transaction by a given index.
      operationId: get_tx_by_index
      produces:
        - application/json
      parameters:
        - name: index
          in: path
          description: The transaction index.
          required: true
          type: integer
          x-example: 10000000
      responses:
        '200':
          description: Returns the transaction.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
        '404':
          description: Not found.
          schema: {}
      deprecated: false
  /txs/count:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get count of transactions at the current height.
      operationId: get_current_tx_count
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Returns count of all transactions at the current height.
          schema: {}
      deprecated: false
  /txs/count/{id}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get transactions count and its type for given aeternity ID.
      operationId: get_tx_count_by_id
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The ID.
          required: true
          type: string
          x-example: ak_g5vQK6beY3vsTJHH7KBusesyzq9WMdEYorF8VyvZURXTjLnxT
      responses:
        '200':
          description: Returns transactions count and its type for given aeternity ID.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /txs/{direction}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get a transactions from beginning or end of the chain. More [info](https://github.com/aeternity/ae_mdw#transaction-querying).
      operationId: get_txs_by_direction
      produces:
        - application/json
      parameters:
        - name: type
          in: query
          description: The transaction type. The query allows providing of multiple type parameters. [More info](https://github.com/aeternity/ae_mdw#types).
          required: false
          type: array
          items:
            type: string
            enum:
              - channel_close_mutual
              - channel_close_solo
              - channel_create
              - channel_deposit
              - channel_force_progress
              - channel_offchain
              - channel_settle
              - channel_slash
              - channel_snapshot_solo
              - channel_withdraw
              - contract_call
              - contract_create
              - ga_attach
              - ga_meta
              - name_claim
              - name_preclaim
              - name_revoke
              - name_transfer
              - name_update
              - oracle_extend
              - oracle_query
              - oracle_register
              - oracle_response
              - paying_for
              - spend
          collectionFormat: multi
          x-example: channel_create
        - name: type_group
          in: query
          description: The type group. The query allows providing of multiple type group parameters. [More info](https://github.com/aeternity/ae_mdw#types).
          required: false
          type: array
          items:
            type: string
            enum:
              - channel
              - contract
              - ga
              - name
              - oracle
              - paying_for
              - spend
          collectionFormat: multi
          x-example: channel
        - name: account
          in: query
          description: The account ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ak_g5vQK6beY3vsTJHH7KBusesyzq9WMdEYorF8VyvZURXTjLnxT
        - name: contract
          in: query
          description: The contract ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ct_2AfnEfCSZCTEkxL5Yoi4Yfq6fF7YapHRaFKDJK3THMXMBspp5z
        - name: channel
          in: query
          description: The channel ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ch_22usvXSjYaDPdhecyhub7tZnYpHeCEZdscEEyhb2M4rHb58RyD
        - name: oracle
          in: query
          description: The oracle ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ok_24jcHLTZQfsou7NvomRJ1hKEnjyNqbYSq2Az7DmyrAyUHPq8uR
        - name: page
          in: query
          description: The number of page to show.
          required: false
          type: integer
          default: 1
          format: int32
          x-example: 1
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          type: integer
          default: 10
          maximum: 1000
          minimum: 1
          format: int32
          x-example: 10
        - name: direction
          in: path
          description: The direction - **forward** is from genesis to the end, **backward** is from end to the beginning.
          required: true
          type: string
          enum:
            - forward
            - backward
        - name: sender_id
          in: query
          description: The sender ID.
          required: false
          type: string
          x-example: ak_26dopN3U2zgfJG4Ao4J4ZvLTf5mqr7WAgLAq6WxjxuSapZhQg5
        - name: recipient_id
          in: query
          description: The recipient ID.
          required: false
          type: string
          x-example: ak_r7wvMxmhnJ3cMp75D8DUnxNiAvXs8qcdfbJ1gUWfH8Ufrx2A2
      responses:
        '200':
          description: Returns result regarding the according criteria.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
  /txs/{scope_type}/{range}:
    get:
      tags:
        - Middleware
      summary: ''
      description: Get a transactions bounded by scope/range.
      operationId: get_txs_by_scope_type_range
      produces:
        - application/json
      parameters:
        - name: type
          in: query
          description: The transaction type. The query allows providing of multiple type parameters. [More info](https://github.com/aeternity/ae_mdw#types).
          required: false
          type: array
          items:
            type: string
            enum:
              - channel_close_mutual
              - channel_close_solo
              - channel_create
              - channel_deposit
              - channel_force_progress
              - channel_offchain
              - channel_settle
              - channel_slash
              - channel_snapshot_solo
              - channel_withdraw
              - contract_call
              - contract_create
              - ga_attach
              - ga_meta
              - name_claim
              - name_preclaim
              - name_revoke
              - name_transfer
              - name_update
              - oracle_extend
              - oracle_query
              - oracle_register
              - oracle_response
              - paying_for
              - spend
          collectionFormat: multi
          x-example: channel_create
        - name: type_group
          in: query
          description: The type group. The query allows providing of multiple type group parameters. [More info](https://github.com/aeternity/ae_mdw#types).
          required: false
          type: array
          items:
            type: string
            enum:
              - channel
              - contract
              - ga
              - name
              - oracle
              - paying_for
              - spend
          collectionFormat: multi
          x-example: channel
        - name: account
          in: query
          description: The account ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ak_g5vQK6beY3vsTJHH7KBusesyzq9WMdEYorF8VyvZURXTjLnxT
        - name: contract
          in: query
          description: The contract ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ct_2AfnEfCSZCTEkxL5Yoi4Yfq6fF7YapHRaFKDJK3THMXMBspp5z
        - name: channel
          in: query
          description: The channel ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ch_22usvXSjYaDPdhecyhub7tZnYpHeCEZdscEEyhb2M4rHb58RyD
        - name: oracle
          in: query
          description: The oracle ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids).
          required: false
          type: string
          x-example: ok_24jcHLTZQfsou7NvomRJ1hKEnjyNqbYSq2Az7DmyrAyUHPq8uR
        - name: page
          in: query
          description: The number of page to show.
          required: false
          type: integer
          default: 1
          format: int32
          x-example: 1
        - name: limit
          in: query
          description: The numbers of items to return.
          required: false
          type: integer
          default: 10
          maximum: 1000
          minimum: 1
          format: int32
          x-example: 10
        - name: scope_type
          in: path
          description: The scope type.
          required: true
          type: string
          enum:
            - gen
            - txi
        - name: range
          in: path
          description: The range.
          required: true
          type: string
          x-example: 0-265354
      responses:
        '200':
          description: Returns result regarding the according criteria.
          schema: {}
        '400':
          description: Bad request.
          schema: {}
      deprecated: false
definitions:
  Status:
    type: object
    properties:
      mdw_height:
        type: integer
      mdw_synced:
        type: boolean
      mdw_tx_index:
        type: integer
      mdw_version:
        type: string
      node_height:
        type: integer
      node_progress:
        type: number
      node_syncing:
        type: boolean
      node_version:
        type: string
  NameClaimDetail:
    type: object
    properties:
      block_hash:
        type: string
      block_height:
        type: integer
      hash:
        type: string
      micro_index:
        type: integer
      micro_time:
        type: integer
      signatures:
        type: array
        items:
          type: string
      tx:
        $ref: '#/definitions/NameClaimTx'
      tx_index:
        type: integer
  NameClaimTx:
    type: object
    properties:
      account_id:
        type: string
      fee:
        type: integer
      name:
        type: string
      name_fee:
        type: integer
      name_id:
        type: string
      name_salt:
        type: integer
      nonce:
        type: integer
      type:
        type: string
      version:
        type: integer
  NameAuctionInfo:
    type: object
    properties:
      auction_end:
        type: integer
      bids:
        type: array
        items:
          type: integer
      last_bid:
        $ref: '#/definitions/NameClaimDetail'
  NameInfo:
    type: object
    properties:
      active_from:
        type: integer
      auction_timeout:
        type: integer
      claims:
        type: array
        items:
          type: integer
      expire_height:
        type: integer
      ownership:
        type: object
        properties:
          current:
            type: string
          original:
            type: string
      pointers:
        type: object
        additionalProperties:
          type: string
      revoke:
        type: integer
      transfers:
        type: array
        items:
          type: integer
      updates:
        type: array
        items:
          type: integer
  NameAuction:
    type: object
    properties:
      active:
        type: boolean
      hash:
        type: string
      info:
        $ref: '#/definitions/NameAuctionInfo'
      name:
        type: string
      previous:
        type: array
        items:
          $ref: '#/definitions/NameInfo'
      status:
        type: string
        enum: [auction, name]
  NameAuctions:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/NameAuction'
      next:
        type: string